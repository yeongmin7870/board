<!doctype html>
<html lang="ko">

<head>
    <meta charset="UTF-8">
    <meta name="viewport"
        content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>회원가입</title>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-w76AqPfDkMBDXo30jS1Sgez6pr3x5MlQ1ZAGC+nuZB+EYdgRZgiwxhTBTkF7CXvN"
        crossorigin="anonymous"></script>
    <link rel="stylesheet" type="text/css" href="/csses/register.css">
</head>

<body>
    <form id="createUser" action="/v1/user/sign-up" method="post">
        <div class="container" style="margin-left: 30%;margin-right: 30%;">
            <h1>회원가입</h1>
            <p>빈칸을 채워주세요</p>
            <hr>
            <div>
                <label for="id"><b>아이디</b></label>
                <input type="text" placeholder="아이디를 입력하세요" name="user_id" id="id" required>
            </div>
            <div>
                <label for="psw"><b>비밀번호</b></label>
                <input type="password" placeholder="비밀번호를 입력하세요" name="user_passwd" id="psw" required>
            </div>
            <div>
                <div style="float: left; width: 50%;">
                    <label for="nickname"><b>닉네임</b></label>
                    <input type="text" placeholder="최대6 글자 별명을 입력하세요" name="nickname" id="nickname" maxlength="6"
                        onkeyup="checkNickname()" required>
                </div>
                <div style="float: left; width: 50%">
                    <input style="background-color: white;" type="text" id="nicknameInfo" value="" readonly>
                </div>
                <input value="" id="checkedNickname" type="text" style="display: none;" required>
            </div>
            <div>
                <label for="address"><b>주소</b></label>
                <input type="text" placeholder="주소를 입력하세요" name="user_address" id="address" readonly required>
            </div>
            <div>
                <label for="Email"><b>이메일</b></label>
                <input type="text" placeholder="이메일 @ 앞자리 입력" name="emailFront" id="emailFront" required>
                @
                <select id="selectEmail" onchange="autoEmail()" required> <!-- 이메일 선택-->
                    <option selected>이메일 선택</option>
                    <option value="@naver.com">naver</option>
                    <option value="@gmail.com">gmail</option>
                    <option value="@daum.com">daum</option>
                    <option value="@kakao.com.com">kakao</option>
                    <option value="@cyworld.com">cyworld</option>
                    <option value="@hanmail.com">hanmail</option>
                    <option value="@outlook.com">outlook</option>
                    <option value="@tistory.com">tistory</option>
                    <option value="@yahoo.com">yahoo</option>
                    <option value="null">직접입력</option>
                </select>
                <input type="text" value="" id="directEmail" name="directEmail" onkeyup="directEmailOption()"
                    style="display: none;" placeholder="example.com" required disabled> <!-- 직접입력 칸 -->

                <input type="text" id="user_email" value="" name="user_email" style="display: none;" required>
                <!-- 서버로 보내줄 이메일 조합 칸 -->
                <br>
            </div>

            <button type="button" id="checkEmailBtn" onclick="btnCheckEmail();"
                style="display: block; width: fit-content;">이메일
                확인받기</button>

            <button type="button" id="checkCodeBtn" onclick="btnCheckCode();"
                style="display: none; width: fit-content;">승인코드 입력 완료</button>

            <button type="button" id="resendCode" onclick="resendBtn();" style="display: none; width: fit-content;">승인코드
                다시 받기</button>

            <p type="text" name="codeTimer" id="codeTimer" style="display: none;">5분0초</p> <!-- 승인 타이머 -->
            <input type="text" placeholder="승인코드를 입력하세요" name="codeBox" id="codeBox" style="display: none;" required>
            <!-- 승인 코드 입력 칸  -->
            <input type="text" placeholder="" name="codeInfo" id="codeInfo"
                style="display: block; background-color: white;" readonly>
            <!-- 승인 여부 확인 박스 -->
            <hr>

            <p>개인정보 제공에 동의 하십니까? <input type="checkbox" required></p>
            <button type="button" class="registerbtn" id="btn_register" onclick="btn_register_event()">회원가입</button>
            <input type="text" id="checkEmailReg" style="display: none;" required> <!--이메일 확인 완료 여부-->
            <div class="container signin">
                <p>이미 계정이 있으신가요? <a href="/v2/login">로그인</a>.</p>
            </div>

        </div>
    </form>
    <script>
        let checkEmailBtn = document.getElementById('checkEmailBtn'); // 이메일 확인 버튼
        let checkCodeBtn = document.getElementById('checkCodeBtn'); // 승인코드 확인 버튼
        let codeTimer = document.getElementById('codeTimer');       // 유효코드 타이머 
        let resendcodeBtn = document.getElementById('resendCode');  // 다시 승인코드 보내는 버튼

        let emailFront = document.getElementById('emailFront'); // email @ 앞자리
        let selectEmail = document.getElementById('selectEmail'); // email 뒷자리 option 선택
        let user_email = document.getElementById('user_email'); // 서버로 보내줄 user_email 칸
        let directEmail = document.getElementById('directEmail'); // 직접입력
        let codeBox = document.getElementById('codeBox'); // 승인 코드 입력 칸
        let checkedNickname = document.getElementById('checkedNickname'); // 닉네임 중복이면 값이 없게 끔 만들어서 회원가입을 못하게 함
        let address = document.getElementById("address"); // 주소입력칸
        let nickname = document.getElementById("nickname"); // 닉네임 칸 
        let nicknameInfo = document.getElementById("nicknameInfo"); // 닉네임 중복여부 알림 
        let btn_register = document.getElementById("btn_register"); //회원가입 버튼
        let createUser = document.getElementById("createUser"); //회원가입 form

        let auth_code = false; // 승인코드 완료 여부
        let directEmail_controlClick = false; // 직접 입력 옵션 클릭 여부
        let timer = ""; //승인코드 타이머
        let info = "";  // 회원 닉네임 여부  1. 없는 닉네임 입니다. 2. 이미 있는 닉네임 입니다. 
        let emailcode = ""; // 서버로 부터 반환 받은 이메일 코드
        let backForbiden = true; // 뒤로가기 후 회원가입 방지

        function btnCheckEmail() {

            if (checkEmailBtn.style.display == 'block' && user_email.value.search(/@/) != -1) {   // 이메일 확인 버튼이 있고 @을 포함해서 뒷자리까지 입력했다면
                checkEmailBtn.style.display = 'none';       //  이메일 버튼 -> 숨기기 && 승인코드 버튼 -> 생성 && 타이머 -> 생성
                checkCodeBtn.style.display = 'block'

                codeBox.style.display = 'block'
                codeTimer.style.display = 'block'
                authTimer(); // 승인 코드 타이머
                sendCode(); // 승인코드 보내기

            } else {
                alert("이메일을 입력해주세요!");
            }

        }
        // 승인코드 타이머
        function authTimer() {
            let time = 60;
            let min = 0;
            let sec = 0;

            timer = setInterval(() => {

                min = parseInt(time / 60);
                sec = time % 60;
                time -= 1;

                codeTimer.innerText = min + "분" + sec + "초";

                if (time <= 0) {
                    clearInterval(timer); // setInterval() exit
                    codeTimer.innerText = "승인코드를 다시 받으세요.";

                    checkCodeBtn.style.display = 'none'
                    resendcodeBtn.style.display = 'block'
                    emailcode.value = ""; // 서버로부터 받은 승인코드 초기화
                }
            }, 1000);
        }

        function resendBtn() { // 승인코드 다시 보내주기 버튼을 누른다면
            checkCodeBtn.style.display = 'block';
            resendcodeBtn.style.display = 'none';
            authTimer();
            sendCode(); // 승인코드 보내기
        }

        function autoEmail() { // 유저가 이메일 선택한거 정리
            user_email.value = emailFront.value + selectEmail.value;
            directEmailBtn(); // 직접 입력 선택 여부
        }


        function directEmailOption() {  // 직접 입력 칸 입력시 서버보내줄 칸으로 값들어가기
            user_email.value = emailFront.value + "@" + directEmail.value;
        }

        function directEmailBtn() { // 직접 입력 선택 여부
            if (selectEmail.value == "null") { // 직접 입력선택을 눌렀다면
                directEmail.style.display = "block";
                directEmail.disabled = false;
            } else {
                directEmail.style.display = "none";
                directEmail.disabled = true;
            }
        }

        function btn_register_event() { // 회원가입 눌렀을때

            // 승인코드 입력 칸 입력했는지 안했는지
            if (checkedNickname.value == "") {
                alert("다시 확인해주세요");
                return;
            } else if (codeBox.value == "" || auth_code == false) { // 승인코드가 빈칸이거나 이메일 인증 미완료 
                alert("이메일 인증해주세요.");
                return;
            }

            btn_register.addEventListener("click", e => {
                e.preventDefault();
                if (auth_code == true) {
                    auth_code = false; // 회원가입을 했으므로 다시 인증받게 이메일 인증 false (뒤로가기 악용 방지)
                    createUser.submit();
                }
            })


        }

        function btnCheckCode() { // 승인완료 코드
            let data = codeBox.value;

            if (emailcode == data) { // 승인완료된다면
                codeInfo.value = "완료";
                codeInfo.style.color = "red";

                codeBox.style.display = "none"; // 코드 입력칸 숨기기
                checkCodeBtn.style.display = "none"; // 입력완료버튼 숨기기
                codeTimer.style.display = "none";  // 시간타이머 숨기기
                clearInterval(timer); //타이머 끄기
                auth_code = true; // 승인코드 완료 여부
                checkEmailReg.value = "checked";

                emailcode.value = ""; // 서버로 부터 받은 코드 초기화
            } else {
                codeInfo.value = "실패";
                codeInfo.style.color = "blue";
            }

        }
        function sendCode() { //승인코드 고객께 보내기
            const data = { receiverEmail: user_email.value };
            fetch('http://localhost:3000/v1/mail', {
                method: 'post',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(data),
            })
                .then((result) => result.json())
                .then((result) => {
                    emailcode = result.randcode;
                })
                .catch((err) => alert('알맞지 않은 인증 메일입니다.'));
        }
        /** 닉네임 중복 실시간 체크 **/
        async function checkNickname() {

            let nickname_v = nickname.value;

            if (nickname_v != "") {
                let check = await fetch(`http://localhost:3000/v1/checknickname/${nickname_v}`)
                let checkNickname = await check.json();
                let nicknameInfo = document.querySelector("#nicknameInfo");


                if (checkNickname.msg == "ok") {
                    nicknameInfo.style.color = "blue"
                    info = "가능";
                    checkedNickname.value = "Good";
                }
                else {
                    nicknameInfo.style.color = "red"
                    info = "불가능"
                    checkedNickname.value = "";
                }
                nicknameInfo.value = info;
            }
        }
    </script>
    <script src="//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js"></script>>
    <script>
        // 카카오 주소 검색 API
        address.addEventListener("click", function () {
            new daum.Postcode({
                oncomplete: (data) => {
                    address.value = data.address;
                }
            }).open();
        });
    </script>
</body>

</html>